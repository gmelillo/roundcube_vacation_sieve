<?php


class ScriptManager
{
    private $scriptCode;

    # Sections for the script building
    private $requires = array('"relational"','"vacation"');

    public function BuildScriptFromParams($params)
    {
        # Read variables
        $message = $params['message'];

        # Detect the format
        $format = 'text';
        if ( strpos('<html', $message) ) $format = 'html';
        
        # Build vacation scripts
        $execBlock =
            sprintf("## Generated by Vacation Sieve plugin for roundcube, the %s ##\n\n", date('r'));

        if($params['enable'])
        {
            # Add require blocks
            $execBlock .= sprintf('require [%s];'."\n\n", join(",",$this->requires));

            # Start to build the script
            $execBlock .= "\n    vacation\n";

            $execBlock .= sprintf("        :days %d\n", $params['every']);
            
            # Add addresses
            if ( is_array($params['addresses']) )
            {
                $addresses = array();
                foreach ( $params['addresses'] as $address )
                {
                    $address = preg_replace('/.*<(.*)>/', '"$1"', $address);
                    $addresses[] = $address;
                }
                $execBlock .= sprintf("        :addresses [%s]\n", join(",",$addresses));
            }

            # Set subject
            $subject = str_replace('"', '\\"', $params['subject']);
            $execBlock .= sprintf('        :subject "%s"'."\n", $subject);
            
            # Add the message in text format
            $message = str_replace('"', '\\"', $params['message']);
            $message = trim($message);
            $execBlock .= sprintf('        "%s";'."\n", $message);
            
            #$execBlock .= "}";
        }

        #header('Content-type: text/plain');
        console($execBlock);
        #exit;

        return $execBlock;
    }

    public function LoadParamsFromScript($script)
    {
        $params = json_decode($script, true);
        return $params;
    }


}
